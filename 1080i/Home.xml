<?xml version="1.0" encoding="utf-8"?>
<window id="0">
    <defaultcontrol always="true">9000</defaultcontrol>
    <include condition="!Skin.HasSetting(Nox.firstrun)">AutoConfig</include>
    <onload condition="Window.Previous(startup) + Skin.HasSetting(Nox.customstartupfocus)">Control.Move(9000,$INFO[Skin.String(Nox.CustomFocusOffset)])</onload>
    <onload condition="System.HasAddon(script.randomitems) + Skin.HasSetting(Nox.randomize)">XBMC.RunScript(script.randomitems,limit=8&amp;unplayed=True)</onload>
    <onload>ClearProperty(DontRunTVShowScripts,Home)</onload>
    <onload>AlarmClock(BGMove,Control.Move(4324,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTileLeft,Control.Move(5001,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTileRight,Control.Move(5003,1),00:10,silent,loop)</onload>
    <onload>AlarmClock(HomeTileMid,Control.Move(5002,1),00:15,silent,loop)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem1.Enable) + SubString(Skin.String(Nox.CustomHomeItem1.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem1.Path)], method=$INFO[Skin.String(Nox.Custom1.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem1)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem2.Enable) + SubString(Skin.String(Nox.CustomHomeItem2.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem2.Path)], method=$INFO[Skin.String(Nox.Custom2.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem2)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem3.Enable) + SubString(Skin.String(Nox.CustomHomeItem3.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem3.Path)], method=$INFO[Skin.String(Nox.Custom3.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem3)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem4.Enable) + SubString(Skin.String(Nox.CustomHomeItem4.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem4.Path)], method=$INFO[Skin.String(Nox.Custom4.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem4)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem5.Enable) + SubString(Skin.String(Nox.CustomHomeItem5.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem5.Path)], method=$INFO[Skin.String(Nox.Custom5.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem5)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem6.Enable) + SubString(Skin.String(Nox.CustomHomeItem6.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem6.Path)], method=$INFO[Skin.String(Nox.Custom6.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem6)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem7.Enable) + SubString(Skin.String(Nox.CustomHomeItem7.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem7.Path)], method=$INFO[Skin.String(Nox.Custom7.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem7)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem8.Enable) + SubString(Skin.String(Nox.CustomHomeItem8.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem8.Path)], method=$INFO[Skin.String(Nox.Custom8.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem8)</onload>
    <onload condition="Skin.HasSetting(Nox.CustomHomeItem9.Enable) + SubString(Skin.String(Nox.CustomHomeItem9.Widget),custom)">XBMC.RunScript(script.randomandlastitems, playlist=$INFO[Skin.String(Nox.CustomHomeItem9.Path)], method=$INFO[Skin.String(Nox.Custom9.Method)], limit=8, unwatched=$INFO[Skin.String(Nox.IncludeWatchedCVPL)], resume=False, propertie=CustomHomeItem9)</onload>
    <onunload>CancelAlarm(HomeTileLeft,true)</onunload>
    <onunload>CancelAlarm(WidgetMove,true)</onunload>
    <onunload>CancelAlarm(BGMove,true)</onunload>
    <onunload>CancelAlarm(HomeTileRight,true)</onunload>
    <onunload>CancelAlarm(HomeTileMid,true)</onunload>
    <onunload>ClearProperty(PanelWidgetInfo,Home)</onunload>
    <allowoverlay>yes</allowoverlay>
    <controls>
        <include>MainMenuCommonContent</include>
        <!-- Fanart -->
        <control type="multiimage">
            <fadetime>600</fadetime>
            <imagepath background="true">$VAR[HomeMainFanartVar]</imagepath>
            <include>Animation_VisibleChange400</include>
            <randomize>true</randomize>
            <animation effect="zoom" start="110" end="130" center="auto" time="15000" tween="linear" pulse="true" condition="Skin.HasSetting(Nox.animatedbghome)">Conditional</animation>
            <animation effect="slide" start="-15,-15" end="15,15" time="7500" tween="linear" pulse="true" condition="Skin.HasSetting(Nox.animatedbghome)">Conditional</animation>
            <visible>!Control.IsVisible(2355)</visible>
        </control>
        <include condition="Skin.HasSetting(Nox.homecdwall)">cdwall-musicvisualisation</include>
        <control type="image">
            <fadetime>600</fadetime>
            <include>FullscreenDimensions</include>
            <texture background="true">$VAR[HomeWidgetFanartVar]</texture>
            <visible>[Control.HasFocus(8000) | Control.HasFocus(5010) | Control.HasFocus(5012) | ControlGroup(5014).HasFocus | ControlGroup(5020).HasFocus | ControlGroup(5021).HasFocus | ControlGroup(5030).HasFocus | ControlGroup(5040).HasFocus] | [Player.HasAudio + Skin.HasSetting(Nox.musicfanarthome)]</visible>
            <animation effect="fade" time="600">Visible</animation>
            <animation effect="fade" time="600">Hidden</animation>
            <animation effect="zoom" start="110" end="130" center="auto" time="15000" tween="linear" pulse="true" condition="Skin.HasSetting(Nox.animatedbghome)">Conditional</animation>
            <animation effect="slide" start="-15,-15" end="15,15" time="7500" tween="linear" pulse="true" condition="Skin.HasSetting(Nox.animatedbghome)">Conditional</animation>
        </control>
        <!-- Music ExtraFanart -->
        <include condition="!IsEmpty(Skin.String(Nox.ArtistsLogosPath))">MusicExtraFanartHome</include>
        <!-- Home Fullscreen Video -->
        <include>CommonMediaPlayingBackground</include>
        <control type="group">
            <visible>Skin.HasSetting(Nox.Glowbar_Home)</visible>
            <include>Animation_VisibleChange400</include>
            <control type="image">
                <include>FullscreenDimensions</include>
                <colordiffuse>$INFO[Skin.String(Nox.BackgroundDarkness)]</colordiffuse>
                <texture>common/black.png</texture>
            </control>
            <control type="image">
                <posx>0</posx>
                <posy>-150</posy>
                <width>1920</width>
                <height>608</height>
                <texture flipy="true">views/showcase_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <include>Animation_WindowFade200</include>
                <animation effect="fade" start="100" end="80" time="5000" pulse="true" condition="true">conditional</animation>
            </control>
            <control type="image">
                <posx>0</posx>
                <posy>622</posy>
                <width>1920</width>
                <height>608</height>
                <texture>views/showcase_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <include>Animation_WindowFade200</include>
                <animation effect="fade" start="100" end="80" time="5000" pulse="true" condition="true">conditional</animation>
            </control>
        </control>
        <include condition="Skin.HasSetting(Nox.effect_bg)">BG_Effect_Home</include>
        <!-- LiveTV Info -->
        <control type="group">
            <visible>!Skin.HasSetting(Nox.lowermainmenu) + !Skin.HasSetting(Nox.Glowbar_Home)</visible>
            <include>Animation_VisibleChangeDelayed</include>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>360</posy>
                <width>1920</width>
                <height>945</height>
                <texture>home/nowplaying_shadow.png</texture>
                <visible>!ControlGroup(5000).HasFocus</visible>
                <visible>Control.HasFocus(8000) | Substring(Control.GetLabel(4321),featured) | Substring(Control.GetLabel(4321),weather) | Substring(Control.GetLabel(4321),panel)</visible>
                <include>Animation_VisibleChangeDelayed</include>
                <animation effect="slide" time="400" tween="cubic" easing="inout" end="0,-225" condition="Skin.HasSetting(Nox.lowermainmenu)">Conditional</animation>
            </control>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>0</posy>
                <width>1920</width>
                <height>945</height>
                <texture flipy="true">home/nowplaying_shadow.png</texture>
                <include>Animation_VisibleChangeDelayed</include>
                <visible>[Player.HasAudio + !Skin.HasSetting(Nox.nohomepageMusicinfo)] | [Player.HasVideo + !Skin.HasSetting(Nox.homepageVideoinfo)]</visible>
                <animation effect="slide" time="400" tween="cubic" easing="inout" end="0,-225" condition="Skin.HasSetting(Nox.lowermainmenu)">Conditional</animation>
            </control>
        </control>
        <control type="group">
            <visible>Skin.HasSetting(Nox.lowermainmenu) + !Skin.HasSetting(Nox.Glowbar_Home)</visible>
            <include>Animation_VisibleChangeDelayed</include>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>160</posy>
                <width>1920</width>
                <height>694</height>
                <texture>home/nowplaying_shadow.png</texture>
                <visible>!ControlGroup(5000).HasFocus</visible>
                <visible>Control.HasFocus(8000) | Substring(Control.GetLabel(4321),featured) | Substring(Control.GetLabel(4321),weather) | Substring(Control.GetLabel(4321),panel)</visible>
                <include>Animation_VisibleChangeDelayed</include>
            </control>
            <control type="image">
                <description>media info background image</description>
                <posx>0</posx>
                <posy>0</posy>
                <width>1920</width>
                <height>545</height>
                <texture flipy="true">home/nowplaying_shadow.png</texture>
                <include>Animation_VisibleChangeDelayed</include>
                <visible>[Player.HasAudio + !Skin.HasSetting(Nox.nohomepageMusicinfo)] | [Player.HasVideo + !Skin.HasSetting(Nox.homepageVideoinfo)]</visible>
            </control>
        </control>
        <!-- Featured widget -->
        <include>HomeFeaturedWidget</include>
        <!-- Latest/Random Items -->
        <control type="group">
            <include>Animation_OpenCloseZoom</include>
            <include>RecentWidget</include>
        </control>
        <include>PosterWidgetTrailerLabel</include>
        <!-- Library Totals -->
        <include>LibraryStats</include>
        <!-- Time Panel-->
        <include>TimePanel</include>
        <!-- RSS -->
        <include>RSSPanel</include>
        <control type="group">
            <include>FullscreenDimensions</include>
            <animation effect="slide" start="0,0" end="0,338" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(Nox.lowermainmenu)">Conditional</animation>
            <include>Animation_OpenCloseZoom</include>
            <control type="group">
                <animation effect="zoom" end="80" center="960,520" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(Nox.smallermainmenu)">Conditional</animation>
                <!-- Submenu -->
                <control type="group" id="9001">
                    <posx>240</posx>
                    <posy>609</posy>
                    <animation effect="zoom" end="120" center="960,610" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(Nox.smallermainmenu)">Conditional</animation>
                    <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(9010)">conditional</animation>
                    <animation effect="slide" start="0,0" end="0,-60" time="300" tween="cubic" easing="inout" condition="!Control.HasFocus(9010)">conditional</animation>
                    <control type="image">
                        <posx>70</posx>
                        <posy>3</posy>
                        <width>1300</width>
                        <height>87</height>
                        <texture>home/submenubar.png</texture>
                        <colordiffuse>$VAR[ExtendedHomeColorVar]</colordiffuse>
                    </control>
                    <include condition="Skin.HasSetting(Nox.submenufixedlist)">SubMenuFixedList</include>
                    <include condition="!Skin.HasSetting(Nox.submenufixedlist)">SubMenuWrapList</include>
                </control>
                <!-- Home OSD -->
                <control type="group">
                    <visible>Player.HasMedia + System.IdleTime(8) + !Control.HasFocus(8003)</visible>
                    <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(Nox.smallermainmenu)">Conditional</animation>
                    <posx>0</posx>
                    <posy>62</posy>
                    <width>1920</width>
                    <height>1080</height>
                    <animation effect="fade" start="0" end="100" time="750" condition="Player.HasAudio + System.IdleTime(8)">Conditional</animation>
                    <control type="progress">
                        <description>Progressbar</description>
                        <posx>0</posx>
                        <posy>452</posy>
                        <width>1920</width>
                        <height>96</height>
                        <info>Player.Progress</info>
                        <texturebg>osd/osd_progress_clear.png</texturebg>
                        <lefttexture>-</lefttexture>
                        <midtexture>osd/osd_progressmid.png</midtexture>
                        <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                        <righttexture>-</righttexture>
                        <overlaytexture>-</overlaytexture>
                    </control>
                </control>
                <!-- Home Menu Bar -->
                <control type="image">
                    <posx>0</posx>
                    <posy>453</posy>
                    <width>1920</width>
                    <height>225</height>
                    <texture>$VAR[HomeMenuBackVar]</texture>
                    <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
                    <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(Nox.smallermainmenu)">Conditional</animation>
                    <animation effect="fade" start="100" end="90" time="50" condition="Skin.HasSetting(Nox.glasshome) + ![Player.HasMedia + System.IdleTime(8)]">Conditional</animation>
                </control>
                <!-- Home OSD -->
                <control type="group">
                    <visible>Player.HasMedia + System.IdleTime(8)</visible>
                    <animation effect="fade" start="0" end="100" time="1050">Visible</animation>
                    <control type="label">
                        <posx>0</posx>
                        <posy>448</posy>
                        <width>1920</width>
                        <height>225</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font_MainClassic</font>
                        <textcolor>$VAR[HomeMenuTextFocusVar]</textcolor>
                        <shadowcolor>-</shadowcolor>
                        <label>$VAR[HomeOSDLabelVar]</label>
                    </control>
                </control>
                <!-- Home Menu -->
                <control type="button" id="8993">
                    <include>HiddenObject</include>
                    <onfocus>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onfocus>
                    <onfocus>SetFocus(9000)</onfocus>
                </control>
                <include condition="Skin.HasSetting(Nox.mainmenufixedlist)">MainMenuFixedList</include>
                <include condition="!Skin.HasSetting(Nox.mainmenufixedlist)">MainMenuWrapList</include>
                <control type="group">
                    <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(Nox.smallermainmenu)">Conditional</animation>
                    <include>Furniture_ClassicHomeGradient</include>
                    <include>Neon_Home</include>
                </control>
            </control>
        </control>
        <!--Weather info-->
        <include condition="!Skin.HasSetting(Nox.ExtendedWeatherInfo) + !IsEmpty(Weather.Plugin)">Weather_Widget_Standard</include>
        <include condition="Skin.HasSetting(Nox.ExtendedWeatherInfo) + !IsEmpty(Weather.Plugin)">Weather_Widget_Plus</include>
        <!-- Music Info -->
        <include condition="!Skin.HasSetting(Nox.nohomepageMusicinfo) | !Skin.HasSetting(Nox.homepageVideoinfo)">Furniture_HomeNowPlaying</include>
    </controls>
</window>